# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./common/temp
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Checking for mis-matching dependencies...
        run: node common/scripts/install-run-rush.js check

      - name: Checking for missing change logs...
        run: node common/scripts/install-run-rush.js change -v      

      - name: Installing...
        run: node common/scripts/install-run-rush.js install        

      - name: Building...
        run: node common/scripts/install-run-rush.js rebuild -p 16
        env:
          SVELTE_DEV_MODE: false
      
      - name: Cache build results
        uses: actions/cache@v2
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            packages
            plugins
            products
            server
            tests
            utils
            rush.json
            .prettierrc
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
  test:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      minio:
        image: minio/minio
        env:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
        ports:
          - 9000:9000

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache build results
        uses: actions/cache@v2
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            packages
            plugins
            products
            server
            tests
            utils
            rush.json
            .prettierrc
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: '7.12.0'
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.4

      - name: Start MinIO
        run: docker run -d --rm -p 9000:9000 -e MINIO_ACCESS_KEY=minioadmin -e MINIO_SECRET_KEY=minioadmin minio/minio server /data

      - name: Testing...
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: 146fae79fffee30a166379a8e5e97beb4582e67af958ae0315dcb538af56cbac
        with:
          coverageCommand: node common/scripts/install-run-rush.js test --verbose
          coverageLocations: |
            ${{github.workspace}}/packages/*/coverage/lcov.info:lcov
            ${{github.workspace}}/plugins/*/coverage/lcov.info:lcov
            ${{github.workspace}}/server/*/coverage/lcov.info:lcov       

  check-formatting:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache build results
        uses: actions/cache@v2
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            packages
            plugins
            products
            server
            tests
            utils
            rush.json
            .prettierrc
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: Check files formatting
        run: |
          node common/scripts/install-run-rush.js format
          echo '================================================================'
          echo 'Checking for diff files'
          echo '================================================================'
          git diff '*.ts' '*.svelte' | cat
          [ -z "$(git diff --name-only '*.ts' '*.svelte' | cat)" ]
          echo '================================================================'
  build-demo:
    needs: [build, test, check-formatting]
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache build results
        uses: actions/cache@v2
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            packages
            plugins
            products
            server
            tests
            utils
            rush.json
            .prettierrc
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: Build Demo
        run: |
          cd ./dev/prod
          node ../../common/scripts/install-run-rushx.js build-demo
      
      - name: Deploy Demo
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.sha == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dev/prod/dist
            
  build-hr-build:
    needs: [build, test, check-formatting]
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache build results
        uses: actions/cache@v2
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            packages
            plugins
            products
            server
            tests
            utils
            rush.json
            .prettierrc
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      
      - name: Archive artifacts...
        uses: actions/upload-artifact@v2
        with:
          name: hr-build
          path: |
            products/hr-build/dist
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: hardcoreeng
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: 'Build HR docker image and publish to github docker registry.'
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
           cd ./products/hr-build
           node ../../common/scripts/install-run-rushx.js docker
           docker push hardcoreeng/hr-build